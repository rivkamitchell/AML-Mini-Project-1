import numpy as np                                              # Import numpy package
import csv                                                      # Import csv package

# Wine Quality Data Preprocessing
with open('winequality-red.csv', mode = 'r') as file:           # Read wine csv file
    wine_list = list(csv.reader(file, delimiter=';'))          
    wine_data = np.array(wine_list[1:], dtype = np.float)       # Load wine data into an array - delete labels

    for wine in wine_data:                                      # Convert quality rating into binary
        if wine[11] > 5: 
            wine[11] = 1
        else: 
            wine[11] = 0

    for wine in wine_data:                                      # Check for missing or malformed features
        if len(wine) != 12:                                     # Check to see if every row has 12 entries
            print(wine)
        else:                                                   # If the row has 12 features, check if there is an empty feature 
            for feature in wine:
                if feature == '' :
                    print(wine)

    # Distributions of the positive and negative classes
    num_wines = len(wine_data)                                  # Number of wines in our data set
    negative_class = 0                                          # Initialize number of wines with negative rating
    positive_class = 0                                          # Initialize number of wines with positive rating

    for wine in wine_data:
        if wine[11] == 0:
            negative_class += 1
        else :
            positive_class +=  1  
    neg_distribution = 100*(negative_class/num_wines)           # Distribution of the negative class
    pos_distribution = 100*(positive_class/num_wines)           # Distribution of the positive class

    print("The distribution of the negative class is: " + str(neg_distribution) + "%.")
    print("The distribution of the positive class is: " + str(pos_distribution) + "%.")
    print()

    # Mean, variance, and standard deviation of each feature
    mean = np.mean(wine_data, axis = 0)
    var = np.var(wine_data, axis = 0)
    std = np.var(wine_data, axis = 0)

    print("Means:\n " + str(mean) + '\n')
    print("Variances:\n " + str(var) + '\n')
    print("Standard Deviations:\n " + str(std)+ '\n')


